@model List<Central_server.ViewModels.ValveVM>

@{
    ViewData["Title"] = "Custom Valve Schedules";
    Layout = "_LayoutCustom";
}

<div class="container mt-5">
    <h2 class="text-center">Thêm lịch trình hoạt động cho các Valve</h2>
    <form asp-controller="Scheduler" asp-action="AddSchedules" method="post">
        <div class="row">
            <div class="col-12">
                @for (int i = 0; i < Model.Count; i++)
                {
                    var valve = Model[i];
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4 class="mb-0">
                                @valve.ValveName
                                <span class="badge @(valve.Status == "1" ? "badge-success" : "badge-secondary")">
                                    @(valve.Status == "1" ? "On" : "Off")
                                </span>
                            </h4>
                        </div>
                        <div class="card-body">
                            <input type="hidden" name="Schedules[@i].ValveId" value="@valve.ValveId" />

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="Schedules[@i].StartTime">Thời gian bắt đầu:</label>
                                        <input type="datetime-local"
                                               class="form-control"
                                               id="Schedules[@i].StartTime"
                                               name="Schedules[@i].StartTime"
                                               />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="Schedules[@i].EndTime">Thời gian kết thúc:</label>
                                        <input type="datetime-local"
                                               class="form-control"
                                               id="Schedules[@i].EndTime"
                                               name="Schedules[@i].EndTime"
                                               />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary">Đăng ký lịch trình</button>
        </div>
    </form>
</div>

<style>
    .badge-success {
        background-color: green;
    }

    .badge-secondary {
        background-color: gray;
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");

        form.addEventListener("submit", function (event) {
            let isValid = true; // Cờ kiểm tra hợp lệ
            const schedules = form.querySelectorAll(".card");

            schedules.forEach((schedule, index) => {
                const startTimeInput = schedule.querySelector(`[name="Schedules[${index}].StartTime"]`);
                const endTimeInput = schedule.querySelector(`[name="Schedules[${index}].EndTime"]`);

                const startTime = new Date(startTimeInput.value);
                const endTime = new Date(endTimeInput.value);

                // Kiểm tra EndTime <= StartTime
                if (endTime <= startTime) {
                    isValid = false;
                    alert(`Thời gian kết thúc phải lớn hơn thời gian bắt đầu cho valve: ${index + 1}`);
                    return;
                }

                // Thiết lập giá trị mặc định nếu trống
                if (!startTimeInput.value) {
                    const defaultStart = new Date();
                    startTimeInput.value = defaultStart.toISOString().slice(0, 16); // ISO datetime-local format
                }
                if (!endTimeInput.value) {
                    const defaultEnd = new Date();
                    defaultEnd.setHours(defaultEnd.getHours() + 1); // Mặc định là 1 giờ sau StartTime
                    endTimeInput.value = defaultEnd.toISOString().slice(0, 16);
                }
            });

            if (!isValid) {
                event.preventDefault(); // Ngăn gửi form nếu không hợp lệ
            }
        });
    });
</script>
